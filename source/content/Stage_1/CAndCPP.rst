类型转换
========

这个是各个语言，最灵活也是最难的部分。从最简单的说起。
#. 长短整型转换。
#. 整型与浮点型的转换。
#. 字符串与数字之间转换
#. 指针类型的转换。
#. 类的的类型转换

最后两者也是最复杂的。也是各种反射机制的基础。
http://www.cnblogs.com/chio/archive/2007/07/18/822389.html

类的转换并且还有一定的规则。可以用强制转换，来实现一些hook的功能，例如hook某一个类的调用。这可以这么用。
动态链接库，就有了中间的搜索查找的过程，就有了Injector的空间。


C++ 现在支持一定的类型推导了，`decltype <http://en.cppreference.com/w/cpp/language/decltype>`_ 
来得到目标的类型。

前置定义用途
============

一方面是用强耦合问题。 主要是用来解决编译的问题，由于走到当前，要求所有接口信息都要已知。但是现在需要东东，现在现在还没有编译怎么办。
这个怎么办呢，提前放一个stub。 这样就骗过编译。 但是骗不过linker. 因为linker是全局搜索的。如果连linker都骗过去，也就得再准备一分空函数库了。
然后在实际的运行的时候，再加上真实的库。 交叉编译就可以。 头文件就是这样一个作用。
